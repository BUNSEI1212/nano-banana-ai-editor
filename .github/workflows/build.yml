name: Build Multi-Platform

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: nano-banana-desktop/package-lock.json
      
      - name: Install dependencies
        run: |
          cd nano-banana-desktop
          npm ci
          cd frontend && npm ci && cd ..
          cd backend && npm ci && cd ..
      
      - name: Build frontend
        run: |
          cd nano-banana-desktop
          npm run build:frontend
      
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: |
          cd nano-banana-desktop
          npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          cd nano-banana-desktop
          npx electron-builder --mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd nano-banana-desktop
          npx electron-builder --linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            nano-banana-desktop/dist/*.exe
            nano-banana-desktop/dist/*.exe.blockmap
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            nano-banana-desktop/dist/*.dmg
            nano-banana-desktop/dist/*.dmg.blockmap
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            nano-banana-desktop/dist/*.AppImage
            nano-banana-desktop/dist/*.AppImage.blockmap

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-build/*
            macos-build/*
            linux-build/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}